{"version":3,"sources":["images/leaf-branch.png","images/Icons/instagram.svg","images/Icons/github.svg","images/Icons/linkedin.svg","Navbar/styled.js","globalStyles.js","Navbar/Contact.js","Navbar/index.js","Homepage/styled.js","Homepage/index.js","Project.js","AboutMe.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","styled","nav","NavList","ul","NavLi","li","NavLink","Link","ContactButton","button","props","isActive","css","ContactPage","div","ContactContainer","MessageForm","FormInput","input","FormTextarea","textarea","Button","paddings","color","border","hoverBackgroundColor","hoverColor","Contact","className","href","target","rel","src","instagramLogo","alt","width","githubLogo","linkedInLogo","htmlFor","type","name","required","autoComplete","cols","rows","Navbar","useState","setIsActive","buttonText","setButtonText","to","onClick","e","console","log","preventDefault","gsap","clipPath","HomepageContainer","IntroContainter","Name","h1","plantShakeTop","keyframes","TopBranch","img","plantShakeRight","RightBranch","Homepage","leaf_branch","rotateFrom","rotateTo","Project","AboutMe","App","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c47a88de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/leaf-branch.f171ad15.png\";","module.exports = __webpack_public_path__ + \"static/media/instagram.3c164603.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.6bd27253.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.38c6146f.svg\";","import styled, { css } from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const Nav = styled.nav`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nexport const NavList = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  width: 30%;\n  @media screen and (max-width: 1000px) {\n    width: 40%;\n  }\n`;\n\nexport const NavLi = styled.li`\n  list-style: none;\n`;\n\nexport const NavLink = styled(Link)`\n  color: white;\n  text-decoration: none;\n  font-size: 20px;\n\n  @media screen and (max-width: 1100px) {\n    font-size: 15px;\n  }\n`;\n\nexport const ContactButton = styled.button`\n  background-color: transparent;\n  border: 1px solid white;\n  color: white;\n  outline: none;\n  padding: 7px 10px;\n  font-size: 20px;\n  z-index: 2;\n  &:hover {\n    background-color: white;\n    color: #9b7778;\n  }\n  @media screen and (max-width: 1100px) {\n    font-size: 15px;\n  }\n\n  ${(props) => {\n    return (\n      props.isActive &&\n      css`\n        background-color: white;\n        color: #c98a6d;\n        border: 1px solid #c98a6d;\n        z-index: 2;\n        &:hover {\n          background-color: #c98a6d;\n          color: white;\n        }\n      `\n    );\n  }}\n`;\n\nexport const ContactPage = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1;\n  opacity: 1;\n  color: #c98a6d;\n  clip-path: circle(50px at 100% -10%);\n  -webkit-clip-path: circle(50px at 100% -10%);\n`;\n\nexport const ContactContainer = styled.div`\n  width: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  border: 1px solid #c98a6d;\n  padding: 2rem;\n`;\n\nexport const MessageForm = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 70%;\n  position: relative;\n`;\n\nexport const FormInput = styled.input`\n  border: none;\n  border-bottom: 1px solid #c98a6d;\n  outline: none;\n  padding: 5px;\n  margin-bottom: 1rem;\n  font-size: 16px;\n  color: #c98a6d;\n`;\n\nexport const FormTextarea = styled.textarea`\n  border: 1px solid #c98a6d;\n  outline: none;\n  font-size: 16px;\n  color: #c98a6d;\n  padding: 5px;\n`;\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  background-color: transparent;\n  font-size: 20px;\n  padding: ${(props) => props.paddings};\n  color: ${(props) => props.color || \"white\"};\n  border: ${(props) => props.border || \"1px solid white\"};\n  margin: 2rem;\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    background-color: ${(props) => props.hoverBackgroundColor || \"white\"};\n    color: ${(props) => props.hoverColor || \"white\"};\n  }\n`;\n","import React from \"react\";\nimport {\n  ContactPage,\n  NavLi,\n  NavList,\n  ContactContainer,\n  MessageForm,\n  FormInput,\n  FormTextarea,\n} from \"./styled\";\nimport { Button } from \"../globalStyles\";\nimport instagramLogo from \"../images/Icons/instagram.svg\";\nimport githubLogo from \"../images/Icons/github.svg\";\nimport linkedInLogo from \"../images/Icons/linkedin.svg\";\n\nconst Contact = () => {\n  return (\n    <ContactPage className=\"contact-page\">\n      <ContactContainer>\n        <h1>LET'S GET IN TOUCH</h1>\n        <p>\n          Need anything built, want to work together or just want to say hi?\n          Simply shoot me a message below or connect with me and I will get back\n          to you soon!\n        </p>\n        <NavList>\n          <NavLi>\n            <a\n              href=\"https://www.instagram.com/jinazhu/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img src={instagramLogo} alt=\"instagram logo\" width=\"50\" />\n            </a>\n          </NavLi>\n          <NavLi>\n            <a\n              href=\"https://github.com/JinaZhu\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img src={githubLogo} alt=\"github logo\" width=\"50\" />\n            </a>\n          </NavLi>\n          <NavLi>\n            <a\n              href=\"https://www.linkedin.com/in/jina-zhu-459899ba/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img src={linkedInLogo} alt=\"LinkedIn logo\" width=\"50\" />\n            </a>\n          </NavLi>\n        </NavList>\n        <MessageForm>\n          <label htmlFor=\"name\">\n            <span>Name</span>\n          </label>\n          <FormInput type=\"text\" name=\"name\" required autoComplete=\"off\" />\n          <label htmlFor=\"email\">\n            <span>Email</span>\n          </label>\n          <FormInput type=\"email\" name=\"email\" required autoComplete=\"off\" />\n          <label htmlFor=\"email\">\n            <span>Message</span>\n          </label>\n          <FormTextarea cols=\"30\" rows=\"5\" />\n          <Button\n            border={\"1px solid #c98a6d\"}\n            paddings={\"0.5rem\"}\n            color={\"#c98a6d\"}\n            hoverBackgroundColor={\"#c98a6d\"}\n          >\n            Submit\n          </Button>\n        </MessageForm>\n      </ContactContainer>\n    </ContactPage>\n  );\n};\n\nexport default Contact;\n","import React, { useState } from \"react\";\nimport { gsap } from \"gsap\";\n\nimport { Nav, NavList, NavLi, NavLink, ContactButton } from \"./styled\";\nimport Contact from \"./Contact\";\n\nconst Navbar = () => {\n  const [isActive, setIsActive] = useState(false);\n  const [buttonText, setButtonText] = useState(\"Contact\");\n  const contactToggle = (e) => {\n    console.log(e);\n    if (isActive === false) {\n      e.preventDefault();\n      setIsActive(true);\n      setButtonText(\"Close\");\n      gsap.to(\".contact-page\", 1, { clipPath: \"circle(2500px at 100% -10%)\" });\n    } else {\n      setIsActive(false);\n      e.preventDefault();\n      setButtonText(\"Contact\");\n      gsap.to(\".contact-page\", 1, { clipPath: \"circle(50px at 100% -10%)\" });\n    }\n  };\n\n  return (\n    <div>\n      <Nav>\n        <NavList>\n          <NavLi>\n            <NavLink to=\"/\">Home</NavLink>\n          </NavLi>\n          <NavLi>\n            <NavLink to=\"/project\">Project</NavLink>\n          </NavLi>\n          <NavLi>\n            <NavLink to=\"/about\">About Me</NavLink>\n          </NavLi>\n          <ContactButton isActive={isActive} onClick={contactToggle}>\n            {buttonText}\n          </ContactButton>\n        </NavList>\n      </Nav>\n      <Contact />\n    </div>\n  );\n};\n\nexport default Navbar;\n","import styled, { keyframes } from \"styled-components\";\n\nexport const HomepageContainer = styled.div`\n  background-color: #9b7778;\n  padding: 0;\n  margin: 0;\n  min-height: 100vh;\n  width: 100vw;\n  overflow: hidden;\n`;\n\nexport const IntroContainter = styled.div`\n  margin: auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  width: 35%;\n  font-size: 20px;\n  margin: auto;\n  margin-top: 7%;\n`;\n\nexport const Name = styled.h1`\n  font-family: \"Oswald\";\n  font-size: 50px;\n  letter-spacing: 10px;\n  padding: 0;\n  margin: 0.5rem;\n`;\n\nconst plantShakeTop = keyframes`\n  from {\n    transform: rotateZ(225deg);\n  }\n  to {\n    transform:rotateZ(215deg);\n  }\n`;\n\nexport const TopBranch = styled.img`\n  position: absolute;\n  top: -15%;\n  left: 0%;\n  transform: rotate(215deg);\n  opacity: 0.5;\n  width: 470px;\n  animation: ${plantShakeTop} 5s infinite ease alternate-reverse 2s;\n\n  @media screen and (max-width: 1200px) {\n    width: 300px;\n    top: -8%;\n  }\n`;\n\nconst plantShakeRight = keyframes`\nfrom {\n  transform: rotateZ(7deg);\n}\nto {\n  transform: rotateZ(0deg);\n}\n`;\n\nexport const RightBranch = styled.img`\n  position: absolute;\n  top: 36%;\n  right: -1%;\n  opacity: 0.5;\n  width: 470px;\n  animation: ${plantShakeRight} 5s infinite ease alternate-reverse 2s;\n\n  @media screen and (max-width: 1200px) {\n    width: 300px;\n    top: 60%;\n  }\n`;\n","import React from \"react\";\nimport Navbar from \"../Navbar\";\nimport leaf_branch from \"../images/leaf-branch.png\";\n\nimport { Button } from \"../globalStyles\";\nimport {\n  HomepageContainer,\n  IntroContainter,\n  Name,\n  TopBranch,\n  RightBranch,\n} from \"./styled\";\n\nconst Homepage = () => {\n  return (\n    <HomepageContainer>\n      <Navbar />\n      <TopBranch\n        src={leaf_branch}\n        alt=\"leaf branch\"\n        rotateFrom={\"225\"}\n        rotateTo={\"215\"}\n      />\n      <RightBranch src={leaf_branch} alt=\"leaf branch\" />\n      <IntroContainter>\n        <p>Hi, my name is</p>\n        <Name>JINA ZHU</Name>\n        <p>\n          I'm a software engineer based in San Francisco, CA specializing in\n          writing clean, elegant, and efficent code.{\" \"}\n        </p>\n        <Button paddings={\"1rem 2rem\"} hoverColor={\"#9b7778\"}>\n          About Me\n        </Button>\n      </IntroContainter>\n    </HomepageContainer>\n  );\n};\n\nexport default Homepage;\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\n\nconst Project = () => {\n  return (\n    <>\n      <Navbar />\n      <h1>Project</h1>);\n    </>\n  );\n};\n\nexport default Project;\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\n\nconst AboutMe = () => {\n  return (\n    <>\n      <Navbar />\n      <h1>About Me</h1>;\n    </>\n  );\n};\n\nexport default AboutMe;\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Homepage from \"./Homepage\";\nimport Project from \"./Project\";\nimport AboutMe from \"./AboutMe\";\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <div className=\"App\">\n        <Route exact path=\"/\" component={Homepage} />\n        <Route path=\"/project\" component={Project} />\n        <Route path=\"/about\" component={AboutMe} />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}